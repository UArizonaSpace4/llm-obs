from sqlalchemy import Column, Integer, String, Float, Boolean
from sqlalchemy.ext.declarative import declarative_base

Base = declarative_base()

class Observation(Base):
    __tablename__ = 'observations'

    obsid = Column(Integer, primary_key=True)
    designation = Column(String, nullable=False)
    prep_time = Column(String, nullable=False)
    start_time = Column(String, nullable=False)
    end_time = Column(String, nullable=False)
    mag = Column(Float)
    vel = Column(Float)
    pa = Column(Float)
    too = Column(Boolean, nullable=False)
    telescope = Column(String, nullable=False)
    minimum_altitude = Column(Float)
    minimum_sun_altitude = Column(Float)
    dither = Column(Boolean, nullable=False)
    ditherpattern = Column(String)
    tle_line0 = Column(String)
    tle_line1 = Column(String)
    tle_line2 = Column(String)
    eph_flag = Column(Integer, nullable=False)
    ra_hms = Column(String)
    ra_deg = Column(Float)
    dec_deg = Column(Float)
    ra_rate = Column(Float)
    dec_rate = Column(Float)
    az_deg = Column(Float)
    el_deg = Column(Float)
    az_rate = Column(Float)
    el_rate = Column(Float)
    sid_track_flag = Column(Integer)
    ra_pm = Column(Float)
    dec_pm = Column(Float)
    epoch = Column(Float)
    exp_time = Column(Float)
    filt = Column(String)
    priority = Column(Integer)
    tracking = Column(String)
    binning = Column(Integer)
    num_exp = Column(Integer)
    exptime = Column(Float)
    wait_time = Column(Float)
    defocus = Column(Float)
    observer = Column(String)
    test = Column(Boolean, default=False)
    autoguide = Column(Boolean, default=False)
    enclosures_override = Column(Boolean, default=False)
    seq_repeats = Column(Integer)
    photometric = Column(Boolean, default=False)
    filter_seq = Column(String)
    abort_on_fail = Column(Boolean, default=False)
    comments = Column(String)
